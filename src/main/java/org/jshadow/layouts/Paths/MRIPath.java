package org.jshadow.layouts.Paths;

import org.jshadow.interfaces.Path;

/**
 * Path of the First Custom Game.
 *
 * @author JoelS
 * @version 1
 */
public class MRIPath implements Path {
    /**
     * Returns possible X positions of the pawns.
     * @return Possible X positions.
     */
    public int[][] getAX() {
        return new int[][]{
                { 1,2,3,4,5,6,7,8,8,8,8,8,8,8,8,9,10,10,10,10,10,10,10,10,11,12,13,14,15,16,17,18,18,18,17,16,15,14,13,12,11,10,10,10,10,10,10,10,10,9,8,8,8,8,8,8,8,8,7,6,5,4,3,2,1,0,0,1,2,3,4,5,6,7,8 },
                { 10,10,10,10,10,10,10,11,12,13,14,15,16,17,18,18,18,17,16,15,14,13,12,11,10,10,10,10,10,10,10,10,9,8,8,8,8,8,8,8,8,7,6,5,4,3,2,1,0,0,0,1,2,3,4,5,6,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9 },
                { 17,16,15,14,13,12,11,10,10,10,10,10,10,10,10,9,8,8,8,8,8,8,8,8,7,6,5,4,3,2,1,0,0,0,1,2,3,4,5,6,7,8,8,8,8,8,8,8,8,9,10,10,10,10,10,10,10,10,11,12,13,14,15,16,17,18,18,17,16,15,14,13,12,11,10 },
                { 8,8,8,8,8,8,8,7,6,5,4,3,2,1,0,0,0,1,2,3,4,5,6,7,8,8,8,8,8,8,8,8,9,10,10,10,10,10,10,10,10,11,12,13,14,15,16,17,18,18,18,17,16,15,14,13,12,11,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9 }
        };
    }

    /**
     * Returns possible Y positions of the pawns.
     * @return Possible Y positions.
     */
    public int[][] getAY() {
        return new int[][]{
                { 8,8,8,8,8,8,8,7,6,5,4,3,2,1,0,0,0,1,2,3,4,5,6,7,8,8,8,8,8,8,8,8,9,10,10,10,10,10,10,10,10,11,12,13,14,15,16,17,18,18,18,17,16,15,14,13,12,11,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9 },
                { 1,2,3,4,5,6,7,8,8,8,8,8,8,8,8,9,10,10,10,10,10,10,10,10,11,12,13,14,15,16,17,18,18,18,17,16,15,14,13,12,11,10,10,10,10,10,10,10,10,9,8,8,8,8,8,8,8,8,7,6,5,4,3,2,1,0,0,1,2,3,4,5,6,7,8 },
                { 10,10,10,10,10,10,10,11,12,13,14,15,16,17,18,18,18,17,16,15,14,13,12,11,10,10,10,10,10,10,10,10,9,8,8,8,8,8,8,8,8,7,6,5,4,3,2,1,0,0,0,1,2,3,4,5,6,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9 },
                { 17,16,15,14,13,12,11,10,10,10,10,10,10,10,10,9,8,8,8,8,8,8,8,8,7,6,5,4,3,2,1,0,0,0,1,2,3,4,5,6,7,8,8,8,8,8,8,8,8,9,10,10,10,10,10,10,10,10,11,12,13,14,15,16,17,18,18,17,16,15,14,13,12,11,10 }
        };
    }

    /**
     * Returns optional X positions of the pawns.
     * @return Empty arrays.
     */
    public int[][] getOptionalAX() {
        return new int[0][];
    }

    /**
     * Returns optional Y positions of the pawns.
     * @return Empty arrays.
     */
    public int[][] getOptionalAY() {
        return new int[0][];
    }
}
